mysql 速度相关的知识：
MySQL索引都以B-树的形式保存

readline()
\s;
show databases;
DROP TABLE companyinfo

CREATE   DATABASE  MYDB;

use   db;
show tables;
CREATE   TABLE USERS(id,name);
desc   user;
select * from /G;

drop database RUNOOB；
DROP TABLE runoob_tbl；

show create tabel arctire_tag；

SET foreign_key_checks = 0;  // 先设置外键约束检查关闭 
drop table table1;  // 删除表，如果要删除视图，也是如此 
SET foreign_key_checks = 1; // 开启外键约束检查，以保持表结构完整性


yundingkejiCompany
数据库查询操作
Python查询Mysql使用 fetchone() 方法获取单条数据, 使用fetchall() 方法获取多条数据。

fetchone(): 该方法获取下一个查询结果集。结果集是一个对象
fetchall():接收全部的返回结果行.
rowcount: 这是一个只读属性，并返回执行execute()方法后影响的行数


create table department(
dept_name varchar(20),
budget int,
descript varchar(20),
primary key(dept_name)
);



create table course(
course_id varchar(20),
deptnames varchar(20),
credits int,
foreign key(deptnames) references department(dept_name));


DISTINCT    重复
SELECT COUNT(*)|COUNT(列名) from 表名 [WHERE 条件语句]
SELECT COUNT(*) from companyinfo
select * from table limit 1
select * from companySalary order by companySalary_id desc limit 1


元丁科技：
create table companySalary(
salaries varchar(1000),
overview_url varchar(1000),
id int,
primary key(id)
);


create table companylocation(
companylocation_overview_url varchar(1000),
companyIocation_sum varchar(2000),
companylocation_id int,
foreign key(companylocation_id) references companySalary(overview_url));

class BaseModel(Base):
    __abstract__ = True
    __metadata__ = MetaData(bind=engine)
    __table_arhs__ = {
        'mysql_engine': 'InnoDb',
        'mysql_charset': 'utf8'
    }
__table_args__ = {'mysql_engine': 'InnoDB', 'mysql_charset': 'utf8'} 

COLLATE=utf8_bin;
  utf8_bin：区分大小写；
  utf8_general_cs：大小写敏感；case insensitive的缩写
  utf8_general_ci：大小写不敏感。case insensitive的缩写，意思是大小写不敏感

“ALTER TABLE table_name

ADD CONSTRAINT pk_table_name PRIMARY KEY(列名1，列名2)；”

元丁科技提供的数据库实例：
CREATE TABLE `glassdoor_company_info` (
	`gdcompany_id` INT(11) NOT NULL,
	`companyname` VARCHAR(200) NOT NULL DEFAULT '',
	`glassdoor_website_link` VARCHAR(255) NULL DEFAULT NULL,
	`company_website` VARCHAR(80) NULL DEFAULT NULL,
	`num_of_employees` VARCHAR(50) NULL DEFAULT NULL,
	`founding_year` VARCHAR(50) NULL DEFAULT NULL,
	`type` VARCHAR(50) NULL DEFAULT NULL,
	`industry` VARCHAR(80) NULL DEFAULT NULL,
	`revenue` VARCHAR(80) NULL DEFAULT NULL,
	`competitors` VARCHAR(80) NULL DEFAULT NULL,
	`company_rating` VARCHAR(10) NULL DEFAULT NULL,
	`review_count` VARCHAR(50) NULL DEFAULT NULL,
	`update_date` DATETIME NULL DEFAULT NULL,
	PRIMARY KEY (`gdcompany_id`, `companyname`)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB              #外键，事务等功能
;

CREATE TABLE `glassdoor_company_loc` (
	`companyloc_id` INT(11) NOT NULL AUTO_INCREMENT,
	`gdcompany_id` INT(11) NULL DEFAULT NULL,
	`companyname` VARCHAR(100) NULL DEFAULT NULL,
	`location` VARCHAR(25) NULL DEFAULT NULL,
	`update_date` DATETIME NULL DEFAULT NULL,
	PRIMARY KEY (`companyloc_id`),
	INDEX `gdcompany_id` (`gdcompany_id`, `companyname`),
	CONSTRAINT `glassdoor_company_loc_ibfk_1` FOREIGN KEY (`gdcompany_id`, `companyname`) REFERENCES `glassdoor_company_info` (`gdcompany_id`, `companyname`)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
;

CREATE TABLE `gd_company_position_sal` (
	`gd_company_pos_id` INT(11) NOT NULL AUTO_INCREMENT,
	`gdcompany_id` INT(11) NULL DEFAULT NULL,
	`companyname` VARCHAR(100) NULL DEFAULT NULL,
	`position` VARCHAR(30) NULL DEFAULT NULL,
	`sal_count` VARCHAR(30) NULL DEFAULT NULL,
	`sal_type` INT(11) NULL DEFAULT NULL,
	`avg_sal_txt` VARCHAR(30) NULL DEFAULT NULL,
	`avg_sal_val` INT(11) NULL DEFAULT NULL,
	`min_sal_text` VARCHAR(30) NULL DEFAULT NULL,
	`min_sal_val` INT(11) NULL DEFAULT NULL,
	`max_sal_text` VARCHAR(30) NULL DEFAULT NULL,
	`max_sal_val` INT(11) NULL DEFAULT NULL,
	`update_date` DATETIME NULL DEFAULT NULL,
	PRIMARY KEY (`gd_company_pos_id`),
	INDEX `gdcompany_id` (`gdcompany_id`, `companyname`),
	CONSTRAINT `gd_company_position_sal_ibfk_1` FOREIGN KEY (`gdcompany_id`, `companyname`) REFERENCES `glassdoor_company_info` (`gdcompany_id`, `companyname`)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
;


ALTER TABLE companyinfo   ADD CONSTRAINT pk_companyinfo PRIMARY KEY(companyinfo_id,companyName);
ALTER TABLE companyinfo  DROP PRIMARY KEY;

companySalary(companySalary_id,companySalary_overview_url, salaries,companyinfo_id)

companylocation(companylocation_id, companyIocation_sum, companylocation_overview_url)

companyinfo(companyinfo_id,companyinfo_overview_url,companyName, Website, Headquarters, size, Founded,Type, Industry, Revenue, Competitors, rate)

创建外键：
1、建立s_user表
create table s_user(
       u_id int auto_increment primary key,
       u_name varchar(15),
       u_pwd varchar(15),
       u_truename varchar(20),
        u_role varchar(6),
       u_email varchar(30)
)


2、建立s_orderform表
create table s_orderform(
         o_id int auto_increment primary key,
         o_buyer_id int,
         o_seller_id int,
         o_totalprices double,
         o_state varchar(50),
         o_information varchar(200),
         foreign key(o_buyer_id) references s_user(u_id),      #外链到s_user表的u_id字段
         foreign key(o_seller_id) references s_user(u_id)      #外链到s_user表的u_id字段
)

建立companyinfo表：38881
companyinfo(companyinfo_id,companyinfo_overview_url,companyName, Website, Headquarters, size, Founded,Type, Industry, Revenue, Competitors, rate)
create table companyinfo(
       companyinfo_id INT(11) NOT NULL AUTO_INCREMENT,
       companyName varchar(1000),
       companyinfo_overview_url varchar(500) NOT NULL,
       Website varchar(5000),
       Headquarters varchar(500),
       size varchar(50),
	   Founded varchar(500),
	   Type varchar(50),
	   Industry varchar(500),
	   Revenue varchar(500),
	   Competitors varchar(500),
	   rate varchar(50),
		PRIMARY KEY (companyinfo_id, companyName)	   
);


建立companySalary表:224976
companySalary(companySalary_id,companySalary_overview_url, salaries,companyinfo_id)
create table companySalary(
       companySalary_id INT(11) auto_increment primary key,
	   companyinfo_id   INT(11) auto_increment,
	   companyName      varchar(1000),
       companySalary_overview_url varchar(500),
       salaries varchar(10000) NOT NULL,
	   foreign key(companyinfo_id,companyName) references companyinfo(companyinfo_id,companyName)
	   
)
ENGINE=InnoDB
;

建立companylocation表:37099
companylocation(companylocation_id, companyIocation_sum, companylocation_overview_url,companyinfo_id)
create table companylocation(
       companylocation_id INT(11) auto_increment,
	   companyinfo_id   INT(11) auto_increment,
	   companyName      varchar(1000),
       companylocation_overview_url varchar(500),
       companyIocation_sum varchar(10000),
	   PRIMARY KEY(companylocation_id),
	INDEX `companyinfo_id` (`companyinfo_id`, `companyname`),
	CONSTRAINT `companylocation_ibfk_1` FOREIGN KEY (`companyinfo_id`, `companyname`) REFERENCES `companyinfo` (`companyinfo_id`, `companyname`)
)
ENGINE=InnoDB
;

